// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: services/mahjong/v1/mahjong.proto

package services_mahjong_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionType int32

const (
	ActionType_Skip         ActionType = 0
	ActionType_Discard      ActionType = 1
	ActionType_Chi          ActionType = 2
	ActionType_Pon          ActionType = 3
	ActionType_DaiMinKan    ActionType = 4
	ActionType_ShouMinKan   ActionType = 5
	ActionType_AnKan        ActionType = 6
	ActionType_Riichi       ActionType = 7
	ActionType_Ron          ActionType = 8
	ActionType_Tsumo        ActionType = 9
	ActionType_KyuShuKyuHai ActionType = 10
	ActionType_ChanKan      ActionType = 11
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:  "Skip",
		1:  "Discard",
		2:  "Chi",
		3:  "Pon",
		4:  "DaiMinKan",
		5:  "ShouMinKan",
		6:  "AnKan",
		7:  "Riichi",
		8:  "Ron",
		9:  "Tsumo",
		10: "KyuShuKyuHai",
		11: "ChanKan",
	}
	ActionType_value = map[string]int32{
		"Skip":         0,
		"Discard":      1,
		"Chi":          2,
		"Pon":          3,
		"DaiMinKan":    4,
		"ShouMinKan":   5,
		"AnKan":        6,
		"Riichi":       7,
		"Ron":          8,
		"Tsumo":        9,
		"KyuShuKyuHai": 10,
		"ChanKan":      11,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_mahjong_v1_mahjong_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_services_mahjong_v1_mahjong_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{0}
}

type Wind int32

const (
	Wind_East  Wind = 0 // 东
	Wind_South Wind = 1 // 南
	Wind_West  Wind = 2 // 西
	Wind_North Wind = 3 // 北
)

// Enum value maps for Wind.
var (
	Wind_name = map[int32]string{
		0: "East",
		1: "South",
		2: "West",
		3: "North",
	}
	Wind_value = map[string]int32{
		"East":  0,
		"South": 1,
		"West":  2,
		"North": 3,
	}
)

func (x Wind) Enum() *Wind {
	p := new(Wind)
	*p = x
	return p
}

func (x Wind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Wind) Descriptor() protoreflect.EnumDescriptor {
	return file_services_mahjong_v1_mahjong_proto_enumTypes[1].Descriptor()
}

func (Wind) Type() protoreflect.EnumType {
	return &file_services_mahjong_v1_mahjong_proto_enumTypes[1]
}

func (x Wind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Wind.Descriptor instead.
func (Wind) EnumDescriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{1}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName string `protobuf:"bytes,1,opt,name=playerName,proto3" json:"playerName,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Token         string         `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ReconnectInfo *ReconnectInfo `protobuf:"bytes,3,opt,name=reconnectInfo,proto3,oneof" json:"reconnectInfo,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{3}
}

func (x *LoginReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LoginReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReply) GetReconnectInfo() *ReconnectInfo {
	if x != nil {
		return x.ReconnectInfo
	}
	return nil
}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{4}
}

func (x *LogoutRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LogoutReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogoutReply) Reset() {
	*x = LogoutReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReply) ProtoMessage() {}

func (x *LogoutReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReply.ProtoReflect.Descriptor instead.
func (*LogoutReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReconnectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID      string        `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	GameInfo    *GameInfo     `protobuf:"bytes,2,opt,name=gameInfo,proto3" json:"gameInfo,omitempty"`
	HandTiles   []int32       `protobuf:"varint,3,rep,packed,name=handTiles,proto3" json:"handTiles,omitempty"`
	PlayerInfos []*PlayerInfo `protobuf:"bytes,4,rep,name=playerInfos,proto3" json:"playerInfos,omitempty"`
}

func (x *ReconnectInfo) Reset() {
	*x = ReconnectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReconnectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconnectInfo) ProtoMessage() {}

func (x *ReconnectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconnectInfo.ProtoReflect.Descriptor instead.
func (*ReconnectInfo) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{6}
}

func (x *ReconnectInfo) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *ReconnectInfo) GetGameInfo() *GameInfo {
	if x != nil {
		return x.GameInfo
	}
	return nil
}

func (x *ReconnectInfo) GetHandTiles() []int32 {
	if x != nil {
		return x.HandTiles
	}
	return nil
}

func (x *ReconnectInfo) GetPlayerInfos() []*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName   string    `protobuf:"bytes,1,opt,name=playerName,proto3" json:"playerName,omitempty"`
	PlayerWind   Wind      `protobuf:"varint,2,opt,name=playerWind,proto3,enum=mahjong.Wind" json:"playerWind,omitempty"`
	PlayerPoints int32     `protobuf:"varint,3,opt,name=playerPoints,proto3" json:"playerPoints,omitempty"`
	BoardTiles   []int32   `protobuf:"varint,4,rep,packed,name=boardTiles,proto3" json:"boardTiles,omitempty"`
	Actions      []*Action `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
	IsRiichi     bool      `protobuf:"varint,6,opt,name=isRiichi,proto3" json:"isRiichi,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{7}
}

func (x *PlayerInfo) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *PlayerInfo) GetPlayerWind() Wind {
	if x != nil {
		return x.PlayerWind
	}
	return Wind_East
}

func (x *PlayerInfo) GetPlayerPoints() int32 {
	if x != nil {
		return x.PlayerPoints
	}
	return 0
}

func (x *PlayerInfo) GetBoardTiles() []int32 {
	if x != nil {
		return x.BoardTiles
	}
	return nil
}

func (x *PlayerInfo) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *PlayerInfo) GetIsRiichi() bool {
	if x != nil {
		return x.IsRiichi
	}
	return false
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID      string `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	RoomName    string `protobuf:"bytes,2,opt,name=roomName,proto3" json:"roomName,omitempty"`
	PlayerCount int32  `protobuf:"varint,3,opt,name=playerCount,proto3" json:"playerCount,omitempty"`
	OwnerName   string `protobuf:"bytes,4,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{8}
}

func (x *Room) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *Room) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *Room) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

func (x *Room) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomName string `protobuf:"bytes,1,opt,name=roomName,proto3" json:"roomName,omitempty"`
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{9}
}

func (x *CreateRoomRequest) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

type CreateRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Room    *Room  `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *CreateRoomReply) Reset() {
	*x = CreateRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomReply) ProtoMessage() {}

func (x *CreateRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomReply.ProtoReflect.Descriptor instead.
func (*CreateRoomReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{10}
}

func (x *CreateRoomReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateRoomReply) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type JoinRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID string `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{11}
}

func (x *JoinRoomRequest) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type JoinRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Room    *Room  `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *JoinRoomReply) Reset() {
	*x = JoinRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomReply) ProtoMessage() {}

func (x *JoinRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomReply.ProtoReflect.Descriptor instead.
func (*JoinRoomReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{12}
}

func (x *JoinRoomReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JoinRoomReply) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type RefreshRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomName *string `protobuf:"bytes,1,opt,name=roomName,proto3,oneof" json:"roomName,omitempty"`
}

func (x *RefreshRoomRequest) Reset() {
	*x = RefreshRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRoomRequest) ProtoMessage() {}

func (x *RefreshRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRoomRequest.ProtoReflect.Descriptor instead.
func (*RefreshRoomRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{13}
}

func (x *RefreshRoomRequest) GetRoomName() string {
	if x != nil && x.RoomName != nil {
		return *x.RoomName
	}
	return ""
}

type RefreshRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string  `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Rooms   []*Room `protobuf:"bytes,2,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *RefreshRoomReply) Reset() {
	*x = RefreshRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshRoomReply) ProtoMessage() {}

func (x *RefreshRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshRoomReply.ProtoReflect.Descriptor instead.
func (*RefreshRoomReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{14}
}

func (x *RefreshRoomReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RefreshRoomReply) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type ReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ReadyRequest_GetReady
	//	*ReadyRequest_CancelReady
	//	*ReadyRequest_AddRobot
	//	*ReadyRequest_RemovePlayer
	//	*ReadyRequest_LeaveRoom
	Message isReadyRequest_Message `protobuf_oneof:"message"`
}

func (x *ReadyRequest) Reset() {
	*x = ReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyRequest) ProtoMessage() {}

func (x *ReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyRequest.ProtoReflect.Descriptor instead.
func (*ReadyRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{15}
}

func (m *ReadyRequest) GetMessage() isReadyRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ReadyRequest) GetGetReady() *GetReadyRequest {
	if x, ok := x.GetMessage().(*ReadyRequest_GetReady); ok {
		return x.GetReady
	}
	return nil
}

func (x *ReadyRequest) GetCancelReady() *CancelReadyRequest {
	if x, ok := x.GetMessage().(*ReadyRequest_CancelReady); ok {
		return x.CancelReady
	}
	return nil
}

func (x *ReadyRequest) GetAddRobot() *AddRobotRequest {
	if x, ok := x.GetMessage().(*ReadyRequest_AddRobot); ok {
		return x.AddRobot
	}
	return nil
}

func (x *ReadyRequest) GetRemovePlayer() *RemovePlayerRequest {
	if x, ok := x.GetMessage().(*ReadyRequest_RemovePlayer); ok {
		return x.RemovePlayer
	}
	return nil
}

func (x *ReadyRequest) GetLeaveRoom() *LeaveRoomRequest {
	if x, ok := x.GetMessage().(*ReadyRequest_LeaveRoom); ok {
		return x.LeaveRoom
	}
	return nil
}

type isReadyRequest_Message interface {
	isReadyRequest_Message()
}

type ReadyRequest_GetReady struct {
	GetReady *GetReadyRequest `protobuf:"bytes,2,opt,name=getReady,proto3,oneof"`
}

type ReadyRequest_CancelReady struct {
	CancelReady *CancelReadyRequest `protobuf:"bytes,3,opt,name=cancelReady,proto3,oneof"`
}

type ReadyRequest_AddRobot struct {
	AddRobot *AddRobotRequest `protobuf:"bytes,4,opt,name=addRobot,proto3,oneof"`
}

type ReadyRequest_RemovePlayer struct {
	RemovePlayer *RemovePlayerRequest `protobuf:"bytes,5,opt,name=removePlayer,proto3,oneof"`
}

type ReadyRequest_LeaveRoom struct {
	LeaveRoom *LeaveRoomRequest `protobuf:"bytes,6,opt,name=leaveRoom,proto3,oneof"`
}

func (*ReadyRequest_GetReady) isReadyRequest_Message() {}

func (*ReadyRequest_CancelReady) isReadyRequest_Message() {}

func (*ReadyRequest_AddRobot) isReadyRequest_Message() {}

func (*ReadyRequest_RemovePlayer) isReadyRequest_Message() {}

func (*ReadyRequest_LeaveRoom) isReadyRequest_Message() {}

type ReadyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ReadyReply_GetReadyReply
	//	*ReadyReply_CancelReadyReply
	//	*ReadyReply_AddRobotReply
	//	*ReadyReply_RemovePlayerReply
	//	*ReadyReply_StartGameReply
	//	*ReadyReply_LeaveRoomReply
	Message isReadyReply_Message `protobuf_oneof:"message"`
}

func (x *ReadyReply) Reset() {
	*x = ReadyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadyReply) ProtoMessage() {}

func (x *ReadyReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadyReply.ProtoReflect.Descriptor instead.
func (*ReadyReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{16}
}

func (m *ReadyReply) GetMessage() isReadyReply_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ReadyReply) GetGetReadyReply() *GetReadyReply {
	if x, ok := x.GetMessage().(*ReadyReply_GetReadyReply); ok {
		return x.GetReadyReply
	}
	return nil
}

func (x *ReadyReply) GetCancelReadyReply() *CancelReadyReply {
	if x, ok := x.GetMessage().(*ReadyReply_CancelReadyReply); ok {
		return x.CancelReadyReply
	}
	return nil
}

func (x *ReadyReply) GetAddRobotReply() *AddRobotReply {
	if x, ok := x.GetMessage().(*ReadyReply_AddRobotReply); ok {
		return x.AddRobotReply
	}
	return nil
}

func (x *ReadyReply) GetRemovePlayerReply() *RemovePlayerReply {
	if x, ok := x.GetMessage().(*ReadyReply_RemovePlayerReply); ok {
		return x.RemovePlayerReply
	}
	return nil
}

func (x *ReadyReply) GetStartGameReply() *StartGameReply {
	if x, ok := x.GetMessage().(*ReadyReply_StartGameReply); ok {
		return x.StartGameReply
	}
	return nil
}

func (x *ReadyReply) GetLeaveRoomReply() *LeaveRoomReply {
	if x, ok := x.GetMessage().(*ReadyReply_LeaveRoomReply); ok {
		return x.LeaveRoomReply
	}
	return nil
}

type isReadyReply_Message interface {
	isReadyReply_Message()
}

type ReadyReply_GetReadyReply struct {
	GetReadyReply *GetReadyReply `protobuf:"bytes,1,opt,name=getReadyReply,proto3,oneof"`
}

type ReadyReply_CancelReadyReply struct {
	CancelReadyReply *CancelReadyReply `protobuf:"bytes,2,opt,name=cancelReadyReply,proto3,oneof"`
}

type ReadyReply_AddRobotReply struct {
	AddRobotReply *AddRobotReply `protobuf:"bytes,3,opt,name=addRobotReply,proto3,oneof"`
}

type ReadyReply_RemovePlayerReply struct {
	RemovePlayerReply *RemovePlayerReply `protobuf:"bytes,4,opt,name=removePlayerReply,proto3,oneof"`
}

type ReadyReply_StartGameReply struct {
	StartGameReply *StartGameReply `protobuf:"bytes,5,opt,name=startGameReply,proto3,oneof"`
}

type ReadyReply_LeaveRoomReply struct {
	LeaveRoomReply *LeaveRoomReply `protobuf:"bytes,6,opt,name=leaveRoomReply,proto3,oneof"`
}

func (*ReadyReply_GetReadyReply) isReadyReply_Message() {}

func (*ReadyReply_CancelReadyReply) isReadyReply_Message() {}

func (*ReadyReply_AddRobotReply) isReadyReply_Message() {}

func (*ReadyReply_RemovePlayerReply) isReadyReply_Message() {}

func (*ReadyReply_StartGameReply) isReadyReply_Message() {}

func (*ReadyReply_LeaveRoomReply) isReadyReply_Message() {}

type StartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*StartRequest_Ping
	//	*StartRequest_Action
	//	*StartRequest_Next
	Message isStartRequest_Message `protobuf_oneof:"message"`
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{17}
}

func (m *StartRequest) GetMessage() isStartRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *StartRequest) GetPing() string {
	if x, ok := x.GetMessage().(*StartRequest_Ping); ok {
		return x.Ping
	}
	return ""
}

func (x *StartRequest) GetAction() *Action {
	if x, ok := x.GetMessage().(*StartRequest_Action); ok {
		return x.Action
	}
	return nil
}

func (x *StartRequest) GetNext() string {
	if x, ok := x.GetMessage().(*StartRequest_Next); ok {
		return x.Next
	}
	return ""
}

type isStartRequest_Message interface {
	isStartRequest_Message()
}

type StartRequest_Ping struct {
	Ping string `protobuf:"bytes,1,opt,name=ping,proto3,oneof"`
}

type StartRequest_Action struct {
	Action *Action `protobuf:"bytes,2,opt,name=action,proto3,oneof"`
}

type StartRequest_Next struct {
	Next string `protobuf:"bytes,3,opt,name=next,proto3,oneof"`
}

func (*StartRequest_Ping) isStartRequest_Message() {}

func (*StartRequest_Action) isStartRequest_Message() {}

func (*StartRequest_Next) isStartRequest_Message() {}

type StartReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*StartReply_Pong
	//	*StartReply_Draw
	//	*StartReply_Discard
	//	*StartReply_Call
	//	*StartReply_GameStart
	//	*StartReply_GameInitInfo
	Message      isStartReply_Message `protobuf_oneof:"message"`
	ValidActions []*Action            `protobuf:"bytes,4,rep,name=validActions,proto3" json:"validActions,omitempty"`
}

func (x *StartReply) Reset() {
	*x = StartReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReply) ProtoMessage() {}

func (x *StartReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReply.ProtoReflect.Descriptor instead.
func (*StartReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{18}
}

func (m *StartReply) GetMessage() isStartReply_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *StartReply) GetPong() string {
	if x, ok := x.GetMessage().(*StartReply_Pong); ok {
		return x.Pong
	}
	return ""
}

func (x *StartReply) GetDraw() *DrawMsg {
	if x, ok := x.GetMessage().(*StartReply_Draw); ok {
		return x.Draw
	}
	return nil
}

func (x *StartReply) GetDiscard() *DiscardMsg {
	if x, ok := x.GetMessage().(*StartReply_Discard); ok {
		return x.Discard
	}
	return nil
}

func (x *StartReply) GetCall() *CallMsg {
	if x, ok := x.GetMessage().(*StartReply_Call); ok {
		return x.Call
	}
	return nil
}

func (x *StartReply) GetGameStart() string {
	if x, ok := x.GetMessage().(*StartReply_GameStart); ok {
		return x.GameStart
	}
	return ""
}

func (x *StartReply) GetGameInitInfo() *GameInfo {
	if x, ok := x.GetMessage().(*StartReply_GameInitInfo); ok {
		return x.GameInitInfo
	}
	return nil
}

func (x *StartReply) GetValidActions() []*Action {
	if x != nil {
		return x.ValidActions
	}
	return nil
}

type isStartReply_Message interface {
	isStartReply_Message()
}

type StartReply_Pong struct {
	Pong string `protobuf:"bytes,1,opt,name=pong,proto3,oneof"`
}

type StartReply_Draw struct {
	Draw *DrawMsg `protobuf:"bytes,2,opt,name=draw,proto3,oneof"`
}

type StartReply_Discard struct {
	Discard *DiscardMsg `protobuf:"bytes,3,opt,name=discard,proto3,oneof"`
}

type StartReply_Call struct {
	Call *CallMsg `protobuf:"bytes,5,opt,name=call,proto3,oneof"`
}

type StartReply_GameStart struct {
	GameStart string `protobuf:"bytes,6,opt,name=gameStart,proto3,oneof"`
}

type StartReply_GameInitInfo struct {
	GameInitInfo *GameInfo `protobuf:"bytes,7,opt,name=gameInitInfo,proto3,oneof"`
}

func (*StartReply_Pong) isStartReply_Message() {}

func (*StartReply_Draw) isStartReply_Message() {}

func (*StartReply_Discard) isStartReply_Message() {}

func (*StartReply_Call) isStartReply_Message() {}

func (*StartReply_GameStart) isStartReply_Message() {}

func (*StartReply_GameInitInfo) isStartReply_Message() {}

type LeaveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomID string `protobuf:"bytes,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
}

func (x *LeaveRoomRequest) Reset() {
	*x = LeaveRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomRequest) ProtoMessage() {}

func (x *LeaveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomRequest.ProtoReflect.Descriptor instead.
func (*LeaveRoomRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{19}
}

func (x *LeaveRoomRequest) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

type AddRobotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotPos   int32  `protobuf:"varint,1,opt,name=robotPos,proto3" json:"robotPos,omitempty"`
	RobotLevel string `protobuf:"bytes,2,opt,name=robotLevel,proto3" json:"robotLevel,omitempty"`
}

func (x *AddRobotRequest) Reset() {
	*x = AddRobotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRobotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRobotRequest) ProtoMessage() {}

func (x *AddRobotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRobotRequest.ProtoReflect.Descriptor instead.
func (*AddRobotRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{20}
}

func (x *AddRobotRequest) GetRobotPos() int32 {
	if x != nil {
		return x.RobotPos
	}
	return 0
}

func (x *AddRobotRequest) GetRobotLevel() string {
	if x != nil {
		return x.RobotLevel
	}
	return ""
}

type RemovePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerPos int32 `protobuf:"varint,1,opt,name=playerPos,proto3" json:"playerPos,omitempty"`
}

func (x *RemovePlayerRequest) Reset() {
	*x = RemovePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerRequest) ProtoMessage() {}

func (x *RemovePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerRequest.ProtoReflect.Descriptor instead.
func (*RemovePlayerRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{21}
}

func (x *RemovePlayerRequest) GetPlayerPos() int32 {
	if x != nil {
		return x.PlayerPos
	}
	return 0
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    ActionType `protobuf:"varint,1,opt,name=type,proto3,enum=mahjong.ActionType" json:"type,omitempty"`
	Tiles   []int32    `protobuf:"varint,2,rep,packed,name=tiles,proto3" json:"tiles,omitempty"`
	FromWho []Wind     `protobuf:"varint,3,rep,packed,name=fromWho,proto3,enum=mahjong.Wind" json:"fromWho,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{22}
}

func (x *Action) GetType() ActionType {
	if x != nil {
		return x.Type
	}
	return ActionType_Skip
}

func (x *Action) GetTiles() []int32 {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *Action) GetFromWho() []Wind {
	if x != nil {
		return x.FromWho
	}
	return nil
}

type GameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wind        Wind    `protobuf:"varint,1,opt,name=wind,proto3,enum=mahjong.Wind" json:"wind,omitempty"`
	Dora        []int32 `protobuf:"varint,2,rep,packed,name=dora,proto3" json:"dora,omitempty"`
	Tiles       []int32 `protobuf:"varint,3,rep,packed,name=tiles,proto3" json:"tiles,omitempty"`
	WindRound   int32   `protobuf:"varint,4,opt,name=windRound,proto3" json:"windRound,omitempty"` // 东一、二、三、四；南一、二、三、四...
	RoundNumber int32   `protobuf:"varint,5,opt,name=roundNumber,proto3" json:"roundNumber,omitempty"`
	RiichiNum   int32   `protobuf:"varint,6,opt,name=riichiNum,proto3" json:"riichiNum,omitempty"` // 立直棒个数
	HonbaNum    int32   `protobuf:"varint,7,opt,name=honbaNum,proto3" json:"honbaNum,omitempty"`   // 本场数
}

func (x *GameInfo) Reset() {
	*x = GameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfo) ProtoMessage() {}

func (x *GameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfo.ProtoReflect.Descriptor instead.
func (*GameInfo) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{23}
}

func (x *GameInfo) GetWind() Wind {
	if x != nil {
		return x.Wind
	}
	return Wind_East
}

func (x *GameInfo) GetDora() []int32 {
	if x != nil {
		return x.Dora
	}
	return nil
}

func (x *GameInfo) GetTiles() []int32 {
	if x != nil {
		return x.Tiles
	}
	return nil
}

func (x *GameInfo) GetWindRound() int32 {
	if x != nil {
		return x.WindRound
	}
	return 0
}

func (x *GameInfo) GetRoundNumber() int32 {
	if x != nil {
		return x.RoundNumber
	}
	return 0
}

func (x *GameInfo) GetRiichiNum() int32 {
	if x != nil {
		return x.RiichiNum
	}
	return 0
}

func (x *GameInfo) GetHonbaNum() int32 {
	if x != nil {
		return x.HonbaNum
	}
	return 0
}

type DrawMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Who  Wind   `protobuf:"varint,1,opt,name=who,proto3,enum=mahjong.Wind" json:"who,omitempty"`
	Tile *int32 `protobuf:"varint,2,opt,name=tile,proto3,oneof" json:"tile,omitempty"`
}

func (x *DrawMsg) Reset() {
	*x = DrawMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawMsg) ProtoMessage() {}

func (x *DrawMsg) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawMsg.ProtoReflect.Descriptor instead.
func (*DrawMsg) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{24}
}

func (x *DrawMsg) GetWho() Wind {
	if x != nil {
		return x.Who
	}
	return Wind_East
}

func (x *DrawMsg) GetTile() int32 {
	if x != nil && x.Tile != nil {
		return *x.Tile
	}
	return 0
}

type DiscardMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Who       Wind  `protobuf:"varint,1,opt,name=who,proto3,enum=mahjong.Wind" json:"who,omitempty"`
	Tile      int32 `protobuf:"varint,2,opt,name=tile,proto3" json:"tile,omitempty"`
	TsumoGiri bool  `protobuf:"varint,3,opt,name=tsumoGiri,proto3" json:"tsumoGiri,omitempty"`
}

func (x *DiscardMsg) Reset() {
	*x = DiscardMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscardMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscardMsg) ProtoMessage() {}

func (x *DiscardMsg) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscardMsg.ProtoReflect.Descriptor instead.
func (*DiscardMsg) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{25}
}

func (x *DiscardMsg) GetWho() Wind {
	if x != nil {
		return x.Who
	}
	return Wind_East
}

func (x *DiscardMsg) GetTile() int32 {
	if x != nil {
		return x.Tile
	}
	return 0
}

func (x *DiscardMsg) GetTsumoGiri() bool {
	if x != nil {
		return x.TsumoGiri
	}
	return false
}

type CallMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        ActionType `protobuf:"varint,1,opt,name=type,proto3,enum=mahjong.ActionType" json:"type,omitempty"`
	Who         Wind       `protobuf:"varint,2,opt,name=who,proto3,enum=mahjong.Wind" json:"who,omitempty"`
	FromWho     *Wind      `protobuf:"varint,3,opt,name=fromWho,proto3,enum=mahjong.Wind,oneof" json:"fromWho,omitempty"`
	TilesOnHand []int32    `protobuf:"varint,4,rep,packed,name=tilesOnHand,proto3" json:"tilesOnHand,omitempty"`
	TileCalled  *int32     `protobuf:"varint,5,opt,name=tileCalled,proto3,oneof" json:"tileCalled,omitempty"`
}

func (x *CallMsg) Reset() {
	*x = CallMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallMsg) ProtoMessage() {}

func (x *CallMsg) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallMsg.ProtoReflect.Descriptor instead.
func (*CallMsg) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{26}
}

func (x *CallMsg) GetType() ActionType {
	if x != nil {
		return x.Type
	}
	return ActionType_Skip
}

func (x *CallMsg) GetWho() Wind {
	if x != nil {
		return x.Who
	}
	return Wind_East
}

func (x *CallMsg) GetFromWho() Wind {
	if x != nil && x.FromWho != nil {
		return *x.FromWho
	}
	return Wind_East
}

func (x *CallMsg) GetTilesOnHand() []int32 {
	if x != nil {
		return x.TilesOnHand
	}
	return nil
}

func (x *CallMsg) GetTileCalled() int32 {
	if x != nil && x.TileCalled != nil {
		return *x.TileCalled
	}
	return 0
}

type GetReadyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Who     int32  `protobuf:"varint,1,opt,name=who,proto3" json:"who,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetReadyReply) Reset() {
	*x = GetReadyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReadyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadyReply) ProtoMessage() {}

func (x *GetReadyReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadyReply.ProtoReflect.Descriptor instead.
func (*GetReadyReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{27}
}

func (x *GetReadyReply) GetWho() int32 {
	if x != nil {
		return x.Who
	}
	return 0
}

func (x *GetReadyReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CancelReadyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Who     int32  `protobuf:"varint,1,opt,name=who,proto3" json:"who,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CancelReadyReply) Reset() {
	*x = CancelReadyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelReadyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReadyReply) ProtoMessage() {}

func (x *CancelReadyReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelReadyReply.ProtoReflect.Descriptor instead.
func (*CancelReadyReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{28}
}

func (x *CancelReadyReply) GetWho() int32 {
	if x != nil {
		return x.Who
	}
	return 0
}

func (x *CancelReadyReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddRobotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotPos   int32  `protobuf:"varint,1,opt,name=robotPos,proto3" json:"robotPos,omitempty"`
	RobotLevel string `protobuf:"bytes,2,opt,name=robotLevel,proto3" json:"robotLevel,omitempty"`
}

func (x *AddRobotReply) Reset() {
	*x = AddRobotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRobotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRobotReply) ProtoMessage() {}

func (x *AddRobotReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRobotReply.ProtoReflect.Descriptor instead.
func (*AddRobotReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{29}
}

func (x *AddRobotReply) GetRobotPos() int32 {
	if x != nil {
		return x.RobotPos
	}
	return 0
}

func (x *AddRobotReply) GetRobotLevel() string {
	if x != nil {
		return x.RobotLevel
	}
	return ""
}

type RemovePlayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Who     int32  `protobuf:"varint,1,opt,name=who,proto3" json:"who,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemovePlayerReply) Reset() {
	*x = RemovePlayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePlayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePlayerReply) ProtoMessage() {}

func (x *RemovePlayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePlayerReply.ProtoReflect.Descriptor instead.
func (*RemovePlayerReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{30}
}

func (x *RemovePlayerReply) GetWho() int32 {
	if x != nil {
		return x.Who
	}
	return 0
}

func (x *RemovePlayerReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StartGameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StartGameReply) Reset() {
	*x = StartGameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameReply) ProtoMessage() {}

func (x *StartGameReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameReply.ProtoReflect.Descriptor instead.
func (*StartGameReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{31}
}

func (x *StartGameReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LeaveRoomReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Who     int32  `protobuf:"varint,1,opt,name=who,proto3" json:"who,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LeaveRoomReply) Reset() {
	*x = LeaveRoomReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveRoomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomReply) ProtoMessage() {}

func (x *LeaveRoomReply) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomReply.ProtoReflect.Descriptor instead.
func (*LeaveRoomReply) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{32}
}

func (x *LeaveRoomReply) GetWho() int32 {
	if x != nil {
		return x.Who
	}
	return 0
}

func (x *LeaveRoomReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetReadyRequest) Reset() {
	*x = GetReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadyRequest) ProtoMessage() {}

func (x *GetReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadyRequest.ProtoReflect.Descriptor instead.
func (*GetReadyRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{33}
}

func (x *GetReadyRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CancelReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CancelReadyRequest) Reset() {
	*x = CancelReadyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelReadyRequest) ProtoMessage() {}

func (x *CancelReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_mahjong_v1_mahjong_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelReadyRequest.ProtoReflect.Descriptor instead.
func (*CancelReadyRequest) Descriptor() ([]byte, []int) {
	return file_services_mahjong_v1_mahjong_proto_rawDescGZIP(), []int{34}
}

func (x *CancelReadyRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_services_mahjong_v1_mahjong_proto protoreflect.FileDescriptor

var file_services_mahjong_v1_mahjong_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x61, 0x68, 0x6a, 0x6f,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x22, 0x27, 0x0a, 0x0b,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x0c,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a,
	0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x41, 0x0a, 0x0d, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x27, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xab, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x6e,
	0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61,
	0x6e, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xe6,
	0x01, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a,
	0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x69, 0x6e, 0x64,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x52, 0x69, 0x69, 0x63, 0x68, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x52, 0x69, 0x69, 0x63, 0x68, 0x69, 0x22, 0x7a, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x29, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22,
	0x4c, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f,
	0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x42, 0x0a,
	0x12, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x51, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x22, 0xc9, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x3f, 0x0a,
	0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x36,
	0x0a, 0x08, 0x61, 0x64, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x61, 0x64,
	0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xb2, 0x03, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x3e, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00,
	0x52, 0x0d, 0x67, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x47, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48,
	0x00, 0x52, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x41, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x76, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61,
	0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x42, 0x09, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x04,
	0x64, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x68,
	0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x04,
	0x64, 0x72, 0x61, 0x77, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x1e, 0x0a,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x37, 0x0a,
	0x0c, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x22, 0x4d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0x33, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x22, 0x70, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x27, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x52,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x6f, 0x22, 0xd1, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x04, 0x77, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x69,
	0x6e, 0x64, 0x52, 0x04, 0x77, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x72, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x64, 0x6f, 0x72, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x69, 0x69, 0x63, 0x68, 0x69, 0x4e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x69, 0x69, 0x63, 0x68, 0x69, 0x4e, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6e, 0x62, 0x61, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x6e, 0x62, 0x61, 0x4e, 0x75, 0x6d, 0x22, 0x4c, 0x0a, 0x07,
	0x44, 0x72, 0x61, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x57,
	0x69, 0x6e, 0x64, 0x52, 0x03, 0x77, 0x68, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x22, 0x5f, 0x0a, 0x0a, 0x44, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e,
	0x57, 0x69, 0x6e, 0x64, 0x52, 0x03, 0x77, 0x68, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x47, 0x69, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x74, 0x73, 0x75, 0x6d, 0x6f, 0x47, 0x69, 0x72, 0x69, 0x22, 0xe3, 0x01, 0x0a, 0x07,
	0x43, 0x61, 0x6c, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1f, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x52, 0x03, 0x77, 0x68,
	0x6f, 0x12, 0x2c, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x57, 0x69, 0x6e,
	0x64, 0x48, 0x00, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x68, 0x6f, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x4f, 0x6e, 0x48, 0x61, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x4f, 0x6e, 0x48, 0x61, 0x6e,
	0x64, 0x12, 0x23, 0x0a, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x74, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x57,
	0x68, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x22, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x77, 0x68, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3e,
	0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x77, 0x68, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x3f, 0x0a, 0x11, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x77, 0x68, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x77,
	0x68, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x68,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x77, 0x68, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2a, 0x9e, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x68, 0x69,
	0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x6f, 0x6e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x44,
	0x61, 0x69, 0x4d, 0x69, 0x6e, 0x4b, 0x61, 0x6e, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x68,
	0x6f, 0x75, 0x4d, 0x69, 0x6e, 0x4b, 0x61, 0x6e, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x6e,
	0x4b, 0x61, 0x6e, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x69, 0x69, 0x63, 0x68, 0x69, 0x10,
	0x07, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x6f, 0x6e, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x73,
	0x75, 0x6d, 0x6f, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x79, 0x75, 0x53, 0x68, 0x75, 0x4b,
	0x79, 0x75, 0x48, 0x61, 0x69, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x4b,
	0x61, 0x6e, 0x10, 0x0b, 0x2a, 0x30, 0x0a, 0x04, 0x57, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x61, 0x73, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x6f, 0x75, 0x74, 0x68, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x65, 0x73, 0x74, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4e,
	0x6f, 0x72, 0x74, 0x68, 0x10, 0x03, 0x32, 0xf3, 0x03, 0x0a, 0x07, 0x4d, 0x61, 0x68, 0x6a, 0x6f,
	0x6e, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x68,
	0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x15, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a,
	0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e,
	0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1a, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a,
	0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1b, 0x2e, 0x6d,
	0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x68, 0x6a,
	0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x15, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x12, 0x39, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x6d, 0x61, 0x68,
	0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x15, 0x5a, 0x13,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x6d, 0x61, 0x68, 0x6a, 0x6f, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_mahjong_v1_mahjong_proto_rawDescOnce sync.Once
	file_services_mahjong_v1_mahjong_proto_rawDescData = file_services_mahjong_v1_mahjong_proto_rawDesc
)

func file_services_mahjong_v1_mahjong_proto_rawDescGZIP() []byte {
	file_services_mahjong_v1_mahjong_proto_rawDescOnce.Do(func() {
		file_services_mahjong_v1_mahjong_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_mahjong_v1_mahjong_proto_rawDescData)
	})
	return file_services_mahjong_v1_mahjong_proto_rawDescData
}

var file_services_mahjong_v1_mahjong_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_services_mahjong_v1_mahjong_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_services_mahjong_v1_mahjong_proto_goTypes = []interface{}{
	(ActionType)(0),             // 0: mahjong.ActionType
	(Wind)(0),                   // 1: mahjong.Wind
	(*PingRequest)(nil),         // 2: mahjong.PingRequest
	(*PingReply)(nil),           // 3: mahjong.PingReply
	(*LoginRequest)(nil),        // 4: mahjong.LoginRequest
	(*LoginReply)(nil),          // 5: mahjong.LoginReply
	(*LogoutRequest)(nil),       // 6: mahjong.LogoutRequest
	(*LogoutReply)(nil),         // 7: mahjong.LogoutReply
	(*ReconnectInfo)(nil),       // 8: mahjong.ReconnectInfo
	(*PlayerInfo)(nil),          // 9: mahjong.PlayerInfo
	(*Room)(nil),                // 10: mahjong.Room
	(*CreateRoomRequest)(nil),   // 11: mahjong.CreateRoomRequest
	(*CreateRoomReply)(nil),     // 12: mahjong.CreateRoomReply
	(*JoinRoomRequest)(nil),     // 13: mahjong.JoinRoomRequest
	(*JoinRoomReply)(nil),       // 14: mahjong.JoinRoomReply
	(*RefreshRoomRequest)(nil),  // 15: mahjong.RefreshRoomRequest
	(*RefreshRoomReply)(nil),    // 16: mahjong.RefreshRoomReply
	(*ReadyRequest)(nil),        // 17: mahjong.ReadyRequest
	(*ReadyReply)(nil),          // 18: mahjong.ReadyReply
	(*StartRequest)(nil),        // 19: mahjong.StartRequest
	(*StartReply)(nil),          // 20: mahjong.StartReply
	(*LeaveRoomRequest)(nil),    // 21: mahjong.LeaveRoomRequest
	(*AddRobotRequest)(nil),     // 22: mahjong.AddRobotRequest
	(*RemovePlayerRequest)(nil), // 23: mahjong.RemovePlayerRequest
	(*Action)(nil),              // 24: mahjong.Action
	(*GameInfo)(nil),            // 25: mahjong.GameInfo
	(*DrawMsg)(nil),             // 26: mahjong.DrawMsg
	(*DiscardMsg)(nil),          // 27: mahjong.DiscardMsg
	(*CallMsg)(nil),             // 28: mahjong.CallMsg
	(*GetReadyReply)(nil),       // 29: mahjong.GetReadyReply
	(*CancelReadyReply)(nil),    // 30: mahjong.CancelReadyReply
	(*AddRobotReply)(nil),       // 31: mahjong.AddRobotReply
	(*RemovePlayerReply)(nil),   // 32: mahjong.RemovePlayerReply
	(*StartGameReply)(nil),      // 33: mahjong.StartGameReply
	(*LeaveRoomReply)(nil),      // 34: mahjong.LeaveRoomReply
	(*GetReadyRequest)(nil),     // 35: mahjong.GetReadyRequest
	(*CancelReadyRequest)(nil),  // 36: mahjong.CancelReadyRequest
}
var file_services_mahjong_v1_mahjong_proto_depIdxs = []int32{
	8,  // 0: mahjong.LoginReply.reconnectInfo:type_name -> mahjong.ReconnectInfo
	25, // 1: mahjong.ReconnectInfo.gameInfo:type_name -> mahjong.GameInfo
	9,  // 2: mahjong.ReconnectInfo.playerInfos:type_name -> mahjong.PlayerInfo
	1,  // 3: mahjong.PlayerInfo.playerWind:type_name -> mahjong.Wind
	24, // 4: mahjong.PlayerInfo.actions:type_name -> mahjong.Action
	10, // 5: mahjong.CreateRoomReply.room:type_name -> mahjong.Room
	10, // 6: mahjong.JoinRoomReply.room:type_name -> mahjong.Room
	10, // 7: mahjong.RefreshRoomReply.rooms:type_name -> mahjong.Room
	35, // 8: mahjong.ReadyRequest.getReady:type_name -> mahjong.GetReadyRequest
	36, // 9: mahjong.ReadyRequest.cancelReady:type_name -> mahjong.CancelReadyRequest
	22, // 10: mahjong.ReadyRequest.addRobot:type_name -> mahjong.AddRobotRequest
	23, // 11: mahjong.ReadyRequest.removePlayer:type_name -> mahjong.RemovePlayerRequest
	21, // 12: mahjong.ReadyRequest.leaveRoom:type_name -> mahjong.LeaveRoomRequest
	29, // 13: mahjong.ReadyReply.getReadyReply:type_name -> mahjong.GetReadyReply
	30, // 14: mahjong.ReadyReply.cancelReadyReply:type_name -> mahjong.CancelReadyReply
	31, // 15: mahjong.ReadyReply.addRobotReply:type_name -> mahjong.AddRobotReply
	32, // 16: mahjong.ReadyReply.removePlayerReply:type_name -> mahjong.RemovePlayerReply
	33, // 17: mahjong.ReadyReply.startGameReply:type_name -> mahjong.StartGameReply
	34, // 18: mahjong.ReadyReply.leaveRoomReply:type_name -> mahjong.LeaveRoomReply
	24, // 19: mahjong.StartRequest.action:type_name -> mahjong.Action
	26, // 20: mahjong.StartReply.draw:type_name -> mahjong.DrawMsg
	27, // 21: mahjong.StartReply.discard:type_name -> mahjong.DiscardMsg
	28, // 22: mahjong.StartReply.call:type_name -> mahjong.CallMsg
	25, // 23: mahjong.StartReply.gameInitInfo:type_name -> mahjong.GameInfo
	24, // 24: mahjong.StartReply.validActions:type_name -> mahjong.Action
	0,  // 25: mahjong.Action.type:type_name -> mahjong.ActionType
	1,  // 26: mahjong.Action.fromWho:type_name -> mahjong.Wind
	1,  // 27: mahjong.GameInfo.wind:type_name -> mahjong.Wind
	1,  // 28: mahjong.DrawMsg.who:type_name -> mahjong.Wind
	1,  // 29: mahjong.DiscardMsg.who:type_name -> mahjong.Wind
	0,  // 30: mahjong.CallMsg.type:type_name -> mahjong.ActionType
	1,  // 31: mahjong.CallMsg.who:type_name -> mahjong.Wind
	1,  // 32: mahjong.CallMsg.fromWho:type_name -> mahjong.Wind
	2,  // 33: mahjong.Mahjong.Ping:input_type -> mahjong.PingRequest
	4,  // 34: mahjong.Mahjong.Login:input_type -> mahjong.LoginRequest
	6,  // 35: mahjong.Mahjong.Logout:input_type -> mahjong.LogoutRequest
	11, // 36: mahjong.Mahjong.CreateRoom:input_type -> mahjong.CreateRoomRequest
	13, // 37: mahjong.Mahjong.JoinRoom:input_type -> mahjong.JoinRoomRequest
	15, // 38: mahjong.Mahjong.RefreshRoom:input_type -> mahjong.RefreshRoomRequest
	17, // 39: mahjong.Mahjong.Ready:input_type -> mahjong.ReadyRequest
	19, // 40: mahjong.Mahjong.Start:input_type -> mahjong.StartRequest
	3,  // 41: mahjong.Mahjong.Ping:output_type -> mahjong.PingReply
	5,  // 42: mahjong.Mahjong.Login:output_type -> mahjong.LoginReply
	7,  // 43: mahjong.Mahjong.Logout:output_type -> mahjong.LogoutReply
	12, // 44: mahjong.Mahjong.CreateRoom:output_type -> mahjong.CreateRoomReply
	14, // 45: mahjong.Mahjong.JoinRoom:output_type -> mahjong.JoinRoomReply
	16, // 46: mahjong.Mahjong.RefreshRoom:output_type -> mahjong.RefreshRoomReply
	18, // 47: mahjong.Mahjong.Ready:output_type -> mahjong.ReadyReply
	20, // 48: mahjong.Mahjong.Start:output_type -> mahjong.StartReply
	41, // [41:49] is the sub-list for method output_type
	33, // [33:41] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_services_mahjong_v1_mahjong_proto_init() }
func file_services_mahjong_v1_mahjong_proto_init() {
	if File_services_mahjong_v1_mahjong_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_mahjong_v1_mahjong_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReconnectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRobotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrawMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscardMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReadyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelReadyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRobotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePlayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveRoomReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_mahjong_v1_mahjong_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelReadyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_mahjong_v1_mahjong_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_services_mahjong_v1_mahjong_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_services_mahjong_v1_mahjong_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ReadyRequest_GetReady)(nil),
		(*ReadyRequest_CancelReady)(nil),
		(*ReadyRequest_AddRobot)(nil),
		(*ReadyRequest_RemovePlayer)(nil),
		(*ReadyRequest_LeaveRoom)(nil),
	}
	file_services_mahjong_v1_mahjong_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ReadyReply_GetReadyReply)(nil),
		(*ReadyReply_CancelReadyReply)(nil),
		(*ReadyReply_AddRobotReply)(nil),
		(*ReadyReply_RemovePlayerReply)(nil),
		(*ReadyReply_StartGameReply)(nil),
		(*ReadyReply_LeaveRoomReply)(nil),
	}
	file_services_mahjong_v1_mahjong_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*StartRequest_Ping)(nil),
		(*StartRequest_Action)(nil),
		(*StartRequest_Next)(nil),
	}
	file_services_mahjong_v1_mahjong_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*StartReply_Pong)(nil),
		(*StartReply_Draw)(nil),
		(*StartReply_Discard)(nil),
		(*StartReply_Call)(nil),
		(*StartReply_GameStart)(nil),
		(*StartReply_GameInitInfo)(nil),
	}
	file_services_mahjong_v1_mahjong_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_services_mahjong_v1_mahjong_proto_msgTypes[26].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_mahjong_v1_mahjong_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_mahjong_v1_mahjong_proto_goTypes,
		DependencyIndexes: file_services_mahjong_v1_mahjong_proto_depIdxs,
		EnumInfos:         file_services_mahjong_v1_mahjong_proto_enumTypes,
		MessageInfos:      file_services_mahjong_v1_mahjong_proto_msgTypes,
	}.Build()
	File_services_mahjong_v1_mahjong_proto = out.File
	file_services_mahjong_v1_mahjong_proto_rawDesc = nil
	file_services_mahjong_v1_mahjong_proto_goTypes = nil
	file_services_mahjong_v1_mahjong_proto_depIdxs = nil
}
